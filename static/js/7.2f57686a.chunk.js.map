{"version":3,"sources":["views/Home/components/CompositeImage.tsx","views/Home/components/SlideSvg.tsx","views/Home/components/Hero.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","views/Home/components/GradientLogoSvg.tsx","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/components/PurpleWordHeading.tsx","views/Home/components/SalesSection/index.tsx","hooks/useIntersectionObserver.ts","views/Home/components/WinSection/LotteryCardContent.tsx","views/Home/components/WinSection/index.tsx","views/Home/components/SunburstSvg.tsx","views/Home/components/Footer.tsx","views/Home/components/CakeDataRow.tsx","views/Home/hooks/useFarmsWithBalance.tsx","views/Home/components/UserBanner/HarvestCard.tsx","views/Home/components/UserBanner/EarningsText.tsx","views/Profile/components/ProfileAvatar.tsx","utils/truncateWalletAddress.ts","views/Home/components/UserBanner/UserDetail.tsx","views/Home/components/UserBanner/index.tsx","views/Home/index.tsx","components/Balance.tsx","utils/encode.ts","utils/calls/estimateGas.ts","utils/getGasPrice.ts","utils/calls/farms.ts","utils/web3.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["Resolution","SlideSvgLight","props","viewBox","d","fill","id","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","SlideSvgDark","floatingAnim","x","y","keyframes","Wrapper","styled","Box","maxHeight","DummyImg","img","ImageWrapper","getImageUrl","base","imageSrc","resolution","getSrcSet","MD","LG","CompositeImage","path","attributes","src","srcSet","map","image","alt","fading","BgWrapper","div","InnerWrapper","BunnyWrapper","StarsWrapper","imagePath","starsImage","Hero","t","useTranslation","account","useWeb3React","theme","useTheme","totalValue","useTotalValue","isDark","width","paddingTop","position","flexDirection","alignItems","justifyContent","flex","scale","color","mb","style","fontSize","height","my","ConnectWalletButton","mr","href","variant","m","cakeSectionData","headingText","bodyText","reverse","primaryButton","to","text","external","secondaryButton","images","StyledCard","Card","mediaQueries","md","rotation","IconWrapper","IconCard","icon","background","title","borderColor","children","borderBackground","StatCardContent","highlightColor","useMatchBreakpoints","isMobile","isTablet","isSmallerScreen","split","remainingWords","pop","slice","length","join","minHeight","maxWidth","mt","GradientLogo","Stats","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","tvlString","formatLocalisedCompactNumber","tvl","TradesCardData","StakedCardData","LotteryCardData","textAlign","colors","primary","failure","PurpleWordHeading","firstWord","SalesSection","headingTranslatedText","ml","alignSelf","bold","useIntersectionObserver","observerRef","useRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","entry","rootMargin","threshold","observe","current","StyledLink","Link","StyledBalance","Balance","gradients","gold","LotteryCardContent","loadData","setLoadData","slowRefresh","useRefresh","lotteryId","setLotteryId","currentLotteryPrize","setCurrentLotteryPrize","cakePriceBusdAsString","usePriceCakeBusd","toString","cakePrizeInUsd","pretext","prizesThisRound","cakePriceBusd","useMemo","BigNumber","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","fetchCurrentID","fetchLottery","amountCollectedInCake","prizeInBusd","times","fetchCurrentLotteryPrize","ref","gt","prefix","decimals","value","getBalanceAmount","toNumber","TransparentFrame","cardBorder","BottomLeftImgWrapper","Flex","TopRightImgWrapper","bottomLeftImage","topRightImage","WinSection","SunburstSvg","filter","fillOpacity","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","stdDeviation","cx","cy","r","gradientTransform","StyledSunburst","xl","FloatingPancakesWrapper","Container","Footer","StyledColumn","noMobileBorder","inputSecondary","sm","Grid","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","getCakeAddress","cakeSupply","mcap","mcapString","farms","useFarms","retroPerBlock","lineHeight","marketCap","toFixed","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","fastRefresh","calls","farmsConfig","farm","address","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","farmsWithBalances","balanceType","totalEarned","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","fetchBalances","HarvestCard","pendingTx","setPendingTx","useToast","toastSuccess","toastError","farmEarningsSum","masterChefContract","useMasterchef","earningsBusd","multipliedBy","numTotalToCollect","numFarmsToCollect","hasCakePoolToCollect","count","earningsText","getEarningsText","preText","toCollectText","harvestAllFarms","useCallback","farmWithBalance","harvestFarm","symbol","isNaN","isLoading","endIcon","spin","disabled","onClick","TeamAvatar","card","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","nft","isActive","team","truncateWalletAddress","startLength","endLength","substring","Desktop","Mobile","Sticker","invertedContrast","radii","circle","boxShadow","StyledNoProfileAvatarIcon","UserDetail","useProfile","truncatedAddress","userName","username","secondary","UserBanner","p","StyledHeroSection","PageSection","UserBannerWrapper","lg","Home","cookies","Cookies","useQueryParam","StringParam","isAddress","rot13","set","HomeSectionContainerStyles","margin","innerProps","hasCurvedDivider","backgroundAlt","MetricsSection","isDisabled","unit","previousValue","start","end","suffix","duration","separator","s","replace","c","indexOf","estimateGas","contract","methodName","methodArgs","gasMarginPer10000","Error","rawGasEstimation","gasEstimation","mul","ethers","from","add","callWithEstimateGas","overrides","gasLimit","tx","getGasPrice","userGas","store","getState","user","gasPrice","GAS_PRICE_GWEI","default","process","ChainId","MAINNET","testnet","options","DEFAULT_GAS_LIMIT","stakeFarm","amount","BIG_TEN","pow","get","deposit","wait","receipt","status","unstakeFarm","withdraw","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getContract","abi","contractOptions","eth","Contract","utils","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","svgFill","concaveDivider","containerProps"],"mappings":"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","file":"static/js/7.2f57686a.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst floatingAnim = (x: string, y: string) => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(${x}, ${y});\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\r\n  position: relative;\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n\r\n  & :nth-child(2) {\r\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n\r\n  & :nth-child(5) {\r\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\r\n    animation-delay: 0s;\r\n  }\r\n`\r\n\r\nconst DummyImg = styled.img<{ maxHeight: string }>`\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n  // visibility: hidden;\r\n`\r\n\r\nconst ImageWrapper = styled(Box)`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nenum Resolution {\r\n  MD = '1.5x',\r\n  LG = '2x',\r\n}\r\ninterface ImageAttributes {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport interface CompositeImageProps {\r\n  path: string\r\n  attributes: ImageAttributes[]\r\n}\r\n\r\ninterface ComponentProps extends CompositeImageProps {\r\n  animate?: boolean\r\n  maxHeight?: string\r\n}\r\n\r\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution): string =>\r\n  `${base}${imageSrc}${resolution ? `@${resolution}.png` : '.png'}`\r\n\r\nexport const getSrcSet = (base: string, imageSrc: string) => {\r\n  return `${getImageUrl(base, imageSrc)} 512w, \r\n  ${getImageUrl(base, imageSrc, Resolution.MD)} 768w, \r\n  ${getImageUrl(base, imageSrc, Resolution.LG)} 1024w,`\r\n}\r\n\r\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\r\n  return (\r\n    <Wrapper maxHeight={maxHeight}>\r\n      <DummyImg\r\n        src={getImageUrl(path, attributes[2].src)}\r\n        maxHeight={maxHeight}\r\n        srcSet={getSrcSet(path, attributes[2].src)}\r\n      />\r\n      {attributes.map((image) => (\r\n        <ImageWrapper key={image.src}>\r\n          <img src={getImageUrl(path, image.src)} srcSet={getSrcSet(path, image.src)} alt={image.alt} />\r\n        </ImageWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CompositeImage\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const SlideSvgLight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 167.023C520.5 167.023 267.5 290.522 0 304.5V339H1660V0.5C1358.83 0.5 1104 167.023 804 167.023Z\"\r\n        fill=\"url(#paint0_linear_light)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_light\" x1=\"830\" y1=\"84\" x2=\"830\" y2=\"339\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"white\" stopOpacity=\"0.48\" />\r\n          <stop offset=\"0.566389\" stopColor=\"white\" stopOpacity=\"0.35\" />\r\n          <stop offset=\"1\" stopColor=\"white\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const SlideSvgDark: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 166.523C520.5 166.523 267.5 290.022 0 304V338.5H1660V0C1358.83 0 1104 166.523 804 166.523Z\"\r\n        fill=\"url(#paint0_linear_dark)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_dark\" x1=\"830\" y1=\"83.5\" x2=\"830\" y2=\"338.5\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"#08060B\" stopOpacity=\"0.2\" />\r\n          <stop offset=\"0.545554\" stopColor=\"#08060B\" stopOpacity=\"0.5\" />\r\n          <stop offset=\"1\" stopColor=\"#08060B\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { usePriceCakeBusd, useTotalValue } from 'state/farms/hooks'\r\nimport { Flex, Heading, Link, Button, Text, Skeleton } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { SlideSvgDark, SlideSvgLight } from './SlideSvg'\r\nimport CompositeImage, { getSrcSet, CompositeImageProps } from './CompositeImage'\r\n\r\nconst flyingAnim = () => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(-5px, -5px);\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst fading = () => keyframes`\r\n  from {\r\n    opacity: 0.9;\r\n  }\r\n  50% {\r\n    opacity: 0.1;\r\n  }\r\n  to {\r\n    opacity: 0.9;\r\n  }  \r\n`\r\n\r\nconst BgWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  bottom: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: -3px;\r\n`\r\n\r\nconst BunnyWrapper = styled.div`\r\n  width: 100%;\r\n  animation: ${flyingAnim} 3.5s ease-in-out infinite;\r\n`\r\n\r\nconst StarsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  & :nth-child(2) {\r\n    animation: ${fading} 2s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${fading} 5s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${fading} 2.5s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n`\r\n\r\nconst imagePath = '/images/home/lunar-bunny/'\r\nconst imageSrc = 'bunny'\r\n\r\nconst starsImage: CompositeImageProps = {\r\n  path: '/images/home/lunar-bunny/',\r\n  attributes: [\r\n    { src: 'star-l', alt: '3D Star' },\r\n    { src: 'star-r', alt: '3D Star' },\r\n    { src: 'star-top-r', alt: '3D Star' },\r\n  ],\r\n}\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n  const totalValue = useTotalValue();\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <InnerWrapper>{theme.isDark ? <SlideSvgDark width=\"100%\" /> : <SlideSvgLight width=\"100%\" />}</InnerWrapper>\r\n      </BgWrapper>\r\n      <Flex\r\n        paddingTop=\"60px\"\r\n        position=\"relative\"\r\n        flexDirection={['column-reverse', null, null, 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex flex=\"1\" flexDirection=\"column\">\r\n          <Heading scale=\"xl\" color=\"primary\" mb=\"24px\">\r\n            RetroSwap\r\n            <span style={{\"color\":\"#ffffff\"}}>{t(\" Setting The Standards In The \")}<span style={{\"color\":\"#fd00e7\"}}>NFT</span>{t(\" Space\")}</span>\r\n          </Heading>\r\n            <Text mb=\"20px\" fontSize=\"18px\">\r\n              {t('RetroSwap is a platform to reward holders of the Retro token , which is the ecosystem to drive growth for Retro')}\r\n              <span style={{\"color\":\"#fd00e7\"}}>{t('NFT')}</span>{t('babies.')}\r\n            </Text>\r\n            <Text>\r\n              {t('\\u2022 Platform for Trading Staking & Farming')}\r\n            </Text>\r\n          <Text fontSize=\"18px\">\r\n            {t('\\u2022 Classic AMM Model')}\r\n          </Text>\r\n          <Text fontSize=\"18px\">\r\n            {t('\\u2022 Incentives to earn Crypto safely & securely')}\r\n          </Text>\r\n          <Text fontSize=\"18px\">\r\n            {t('\\u2022 Rewards from every Transactions')}\r\n          </Text>\r\n          \r\n          <Text fontSize=\"18px\">\r\n            {t('\\u2022 Whitelist Opportunities')}\r\n          </Text>\r\n          <Text mb=\"20px\" fontSize=\"18px\">\r\n            {t('\\u2022 Co Ownership of a subscription Arcade getting built in the MetaVerse')}\r\n          </Text>\r\n          <Text mb=\"20px\" color=\"primary\" fontSize=\"20px\">\r\n            {t('Total Value Locked')}\r\n          </Text>\r\n          {totalValue ? (\r\n            // <Heading scale=\"lg\" mb=\"20px\" >{t('$%marketCap%', { marketCap: totalValue.toNumber().toLocaleString() })}</Heading>\r\n            // <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={totalValue.toNumber()} />\r\n            <Heading scale=\"lg\" mb=\"20px\" >{t('$0' )}</Heading>\r\n          ) : (\r\n            <Skeleton height={24} width={126} my=\"4px\" />\r\n          )}\r\n          \r\n          <Flex>\r\n            {!account && <ConnectWalletButton mr=\"8px\" />}\r\n            <Link mr=\"16px\" href=\"/swap\">\r\n              <Button style={{color:account ? \"#ffffff\" : \"#fd00e7\"}} variant={!account ? 'secondary' : 'primary'}>{t('Trade Now')}</Button>\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          m={['auto', 'auto', 'auto', 'auto']}\r\n          position=\"relative\"\r\n        >\r\n          <BunnyWrapper>\r\n            <img src={`${imagePath}${imageSrc}.png`} srcSet={getSrcSet(imagePath, imageSrc)} alt={t('Lunar bunny')} />\r\n          </BunnyWrapper>\r\n          <StarsWrapper>\r\n            <CompositeImage {...starsImage} />\r\n          </StarsWrapper>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import { SalesSectionProps } from '.'\r\n\r\nexport const swapSectionData: SalesSectionProps = {\r\n  headingText: 'Trade anything. No registration, no hassle.',\r\n  bodyText: 'Trade any token on Binance Smart Chain in seconds, just by connecting your wallet.',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/swap',\r\n    text: 'Trade Now',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.retroswap.com/',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/trade/',\r\n    attributes: [\r\n      { src: 'BNB', alt: 'BNB token' },\r\n      { src: 'BTC', alt: 'BTC token' },\r\n      { src: 'CAKE', alt: 'CAKE token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const earnSectionData: SalesSectionProps = {\r\n  headingText: 'Earn passive income with crypto.',\r\n  bodyText: 'PancakeSwap makes it easy to make your crypto work for you.',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/farms',\r\n    text: 'Explore',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://docs.pancakeswap.finance/products/yield-farming',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/earn/',\r\n    attributes: [\r\n      { src: 'pie', alt: 'Pie chart' },\r\n      { src: 'stonks', alt: 'Stocks chart' },\r\n      { src: 'folder', alt: 'Folder with cake token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const cakeSectionData: SalesSectionProps = {\r\n  headingText: 'RETRO  Powers The RetroNFTbabies Ecosystem.',\r\n  bodyText:\r\n    'Buy it , Hold it , Farm it, Stake it...',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap?outputCurrency=0x30B8274C3b452d6D5af4dedC3464C18E65dDeC64',\r\n    text: 'Buy RETRO',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://retroswap.com/docs/whitepaper.pdf',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n\r\n  images: {\r\n    path: '/images/home/cake/',\r\n    attributes: [\r\n      { src: 'bottom-right', alt: 'Small 3d pancake' },\r\n      { src: 'top-right', alt: 'Small 3d pancake' },\r\n      { src: 'coin', alt: 'CAKE token' },\r\n      { src: 'top-left', alt: 'Small 3d pancake' },\r\n    ],\r\n  },\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Box, CardProps, Heading } from '@pancakeswap/uikit'\r\n\r\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\r\n  height: fit-content;\r\n  padding: 1px 1px 4px 1px;\r\n  box-sizing: border-box;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\ninterface IconCardProps extends IconCardData, CardProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport interface IconCardData {\r\n  icon: ReactNode\r\n  title?: string\r\n  color?: string\r\n  background?: string\r\n  borderColor?: string\r\n  rotation?: string\r\n}\r\n\r\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, title, color, borderColor, rotation, children, ...props }) => {\r\n  return (\r\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\r\n      <CardBody>\r\n        <Heading scale=\"xl\" color={color}>{title}</Heading>\r\n        <IconWrapper rotation={rotation}>{icon}</IconWrapper>\r\n        {children}\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IconCard\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\n\r\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\r\n  headingText,\r\n  bodyText,\r\n  highlightColor,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints()\r\n  const isSmallerScreen = isMobile || isTablet\r\n  const split = headingText.split(' ')\r\n  const lastWord = split.pop()\r\n  const remainingWords = split.slice(0, split.length).join(' ')\r\n\r\n  return (\r\n    <Flex\r\n      minHeight={[null, null, null, '280px']}\r\n      maxWidth=\"250px\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      mt={[null, null, null, '14px']}\r\n    >\r\n      {isSmallerScreen && remainingWords.length > 13 ? (\r\n        <Heading scale=\"md\">{headingText}</Heading>\r\n      ) : (\r\n        <Heading scale=\"lg\" >{headingText}</Heading>\r\n      )}\r\n      <Text color=\"textSubtle\"  mt=\"20px\">{bodyText}</Text>\r\n      \r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StatCardContent\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst GradientLogo: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 48 48\" {...props}>\r\n      <image width=\"48\" height=\"48\" href='/logo.png'/>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default GradientLogo\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon, TicketFillIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetStats } from 'hooks/api'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport StatCardContent from './StatCardContent'\r\nimport GradientLogo from '../GradientLogoSvg'\r\n\r\n// Values fetched from bitQuery effective 13/8/21\r\nconst txCount = 44713126\r\nconst addressCount = 2607499\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  const data = useGetStats()\r\n  const { theme } = useTheme()\r\n\r\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\r\n  const trades = formatLocalisedCompactNumber(txCount)\r\n  const users = formatLocalisedCompactNumber(addressCount)\r\n\r\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\r\n  const [entrusting, inFunds] = tvlText.split(tvlString)\r\n\r\n  const UsersCardData: IconCardData = {\r\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\r\n  }\r\n\r\n  const TradesCardData: IconCardData = {\r\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\r\n  }\r\n\r\n  const StakedCardData: IconCardData = {\r\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\r\n  }\r\n\r\n  const LotteryCardData: IconCardData = {\r\n    icon: <TicketFillIcon color=\"secondary\" width=\"36px\" />,\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <GradientLogo height=\"180px\" width=\"180px\" mb=\"24px\" />\r\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"28px\">\r\n        {t('Earn in Multiple Ways.')}\r\n      </Heading>\r\n      <Flex flexDirection={['column', null, null, 'row']}>\r\n        <IconCard {...TradesCardData} borderColor=\"#ff0e32\" color=\"primary\" title=\"Farms\" mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('Stake in your Favourite LP Farms')}\r\n            bodyText={t('Earn RETRO Token by Staking in LP tokens Maximize your earning via Auto-compoundings')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...StakedCardData} borderColor=\"#ff0e32\" color=\"failure\" title=\"Pools\"  mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('High earnings with Single asset staking')}\r\n            bodyText={t('Stake RETRO Token to Earn RETRO Token with our Pools, High APR per Day, Week, Monthly and Yearly')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...LotteryCardData} borderColor=\"#ff0e32\" color=\"secondary\" title=\"Lottery\" mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('Earn $Retro from your friend stake')}\r\n            bodyText={t('Enjoy our unique referral program and chance to earn a passive income of Pool earning')}\r\n            highlightColor={theme.colors.failure}\r\n          />\r\n        </IconCard>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import { useEffect, useState } from 'react'\r\n\r\n/* eslint-disable camelcase */\r\nexport interface DeBankTvlResponse {\r\n  id: string\r\n  chain: string\r\n  name: string\r\n  site_url: string\r\n  logo_url: string\r\n  has_supported_portfolio: boolean\r\n  tvl: number\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\r\n        const responseData: DeBankTvlResponse = await response.json()\r\n\r\n        setData(responseData)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst PurpleWordHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const { t } = useTranslation()\r\n  const remainingWords = split.slice(1).join(' ')\r\n  return (\r\n    <Heading scale=\"xl\" mb=\"24px\" {...props}>\r\n      <span style={{ color: theme.colors.primary }}>{firstWord} </span>\r\n      \r\n      <span>\r\n              {t('Powers The Retro')}\r\n              <span style={{\"color\":\"#fd00e7\"}}>{t('NFT')}</span>{t('babies Ecosystem.')}\r\n      </span>\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default PurpleWordHeading\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\r\nimport PurpleWordHeading from '../PurpleWordHeading'\r\n\r\ninterface SalesSectionButton {\r\n  to: string\r\n  text: string\r\n  external: boolean\r\n}\r\n\r\nexport interface SalesSectionProps {\r\n  headingText: string\r\n  bodyText: string\r\n  reverse: boolean\r\n  primaryButton: SalesSectionButton\r\n  secondaryButton: SalesSectionButton\r\n  images: CompositeImageProps\r\n}\r\n\r\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\r\n\r\n  const headingTranslatedText = t(headingText)\r\n  const bodyTranslatedText = t(bodyText)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex\r\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"1\"\r\n          ml={[null, null, null, reverse && '64px']}\r\n          mr={[null, null, null, !reverse && '64px']}\r\n          alignSelf={['flex-start', null, null, 'center']}\r\n        >\r\n          <PurpleWordHeading text={headingTranslatedText} />\r\n          <Text color=\"textSubtle\" mb=\"24px\">            \r\n            {t('Buy it , Hold it , Farm it, Stake it,  Retro')}\r\n              <span style={{\"color\":\"#cd00e7\"}}>{t('NFT')}</span>{t('babies.')}\r\n          </Text>\r\n          <Text fontSize=\"18px\">\r\n              {t('\\u2022 All presale investors not only get a ')}<span style={{\"color\":\"#cd00e7\"}}>{t('50% discount')}</span>\r\n          </Text>\r\n          <Text mb=\"20px\" fontSize=\"18px\">\r\n              {t('\\u2022 All will receive a ')}<span style={{\"color\":\"#cd00e7\"}}>{t('whitelist allocation to mint')}</span>{t(' Retro')}\r\n              <span style={{\"color\":\"#cd00e7\"}}>{t('NFT')}</span>{t('babies.')}\r\n            </Text>\r\n         \r\n          <Flex>\r\n            <Link mr=\"16px\" external={primaryButton.external} href={primaryButton.to}>\r\n              <Button >\r\n                <Text color=\"card\" bold fontSize=\"16px\">\r\n                  {t(primaryButton.text)}\r\n                </Text>\r\n              </Button>\r\n            </Link>\r\n            <Link external={secondaryButton.external} href={secondaryButton.to}>\r\n              {t(secondaryButton.text)}\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          m={['auto', 'auto', 'auto', 'auto']}\r\n        >\r\n          <CompositeImage {...images} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SalesSection\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nconst useIntersectionObserver = () => {\r\n  const observerRef = useRef<HTMLDivElement>(null)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const [isIntersecting, setIsIntersecting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\r\n      setIsIntersecting(entry.isIntersecting)\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const intersectionObserver = new IntersectionObserver(checkObserverIsIntersecting, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      intersectionObserver.observe(observerRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  return { observerRef, isIntersecting }\r\n}\r\n\r\nexport default useIntersectionObserver\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { Flex, Text, Skeleton, Link, Button, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport Balance from 'components/Balance'\r\nimport styled from 'styled-components'\r\nimport { fetchCurrentLotteryIdAndMaxBuy, fetchLottery } from 'state/lottery/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst StyledBalance = styled(Balance)`\r\n  background: ${({ theme }) => theme.colors.gradients.gold};\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`\r\n\r\nconst LotteryCardContent = () => {\r\n  const { t } = useTranslation()\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const [loadData, setLoadData] = useState(false)\r\n  const { slowRefresh } = useRefresh()\r\n  const [lotteryId, setLotteryId] = useState<string>(null)\r\n  const [currentLotteryPrize, setCurrentLotteryPrize] = useState<BigNumber>(null)\r\n  const cakePriceBusdAsString = usePriceCakeBusd().toString()\r\n\r\n  const cakePrizesText = t('%cakePrizeInUsd% in RETRO prizes this round', { cakePrizeInUsd: cakePriceBusdAsString })\r\n  const [pretext, prizesThisRound] = cakePrizesText.split(cakePriceBusdAsString)\r\n\r\n  const cakePriceBusd = useMemo(() => {\r\n    return new BigNumber(cakePriceBusdAsString)\r\n  }, [cakePriceBusdAsString])\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setLoadData(true)\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  useEffect(() => {\r\n    // get current lottery ID\r\n    const fetchCurrentID = async () => {\r\n      const { currentLotteryId } = await fetchCurrentLotteryIdAndMaxBuy()\r\n      setLotteryId(currentLotteryId)\r\n    }\r\n\r\n    if (loadData) {\r\n      fetchCurrentID()\r\n    }\r\n  }, [loadData, setLotteryId])\r\n\r\n  useEffect(() => {\r\n    // get public data for current lottery\r\n    const fetchCurrentLotteryPrize = async () => {\r\n      const { amountCollectedInCake } = await fetchLottery(lotteryId)\r\n      const prizeInBusd = cakePriceBusd.times(amountCollectedInCake)\r\n      setCurrentLotteryPrize(prizeInBusd)\r\n    }\r\n\r\n    if (lotteryId) {\r\n      fetchCurrentLotteryPrize()\r\n    }\r\n  }, [lotteryId, slowRefresh, setCurrentLotteryPrize, cakePriceBusd])\r\n\r\n  return (\r\n    <>\r\n      <Flex flexDirection=\"column\" mt=\"48px\">\r\n        <div ref={observerRef} />\r\n        <Text color=\"white\" bold fontSize=\"16px\">\r\n          {t('Lottery')}\r\n        </Text>\r\n        {pretext && (\r\n          <Text color=\"white\" mt=\"12px\" bold fontSize=\"16px\">\r\n            {pretext}\r\n          </Text>\r\n        )}\r\n        {currentLotteryPrize && currentLotteryPrize.gt(0) ? (\r\n          <StyledBalance\r\n            fontSize=\"40px\"\r\n            bold\r\n            prefix=\"$\"\r\n            decimals={2}\r\n            value={getBalanceAmount(currentLotteryPrize).toNumber()}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Skeleton width={200} height={40} my=\"8px\" />\r\n            <div ref={observerRef} />\r\n          </>\r\n        )}\r\n        <Text color=\"white\" mb=\"24px\" bold fontSize=\"16px\">\r\n          {prizesThisRound}\r\n        </Text>\r\n        <Text color=\"white\" mb=\"40px\">\r\n          {t('Buy tickets with RETRO, win RETRO if your numbers match')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n        <StyledLink href=\"/lottery\" id=\"homepage-prediction-cta\">\r\n          <Button width=\"100%\">\r\n            <Text bold >\r\n              {t('Buy Tickets')}\r\n            </Text>\r\n            <ArrowForwardIcon ml=\"4px\"  />\r\n          </Button>\r\n        </StyledLink>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LotteryCardContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, TicketFillIcon, PredictionsIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport PurpleWordHeading from '../PurpleWordHeading'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport PredictionCardContent from './PredictionCardContent'\r\nimport LotteryCardContent from './LotteryCardContent'\r\nimport CompositeImage from '../CompositeImage'\r\n\r\nconst TransparentFrame = styled.div<{ isDark: boolean }>`\r\n  background: ${({ theme }) => (theme.isDark ? 'rgba(8, 6, 11, 0.6)' : ' rgba(255, 255, 255, 0.6)')};\r\n  padding: 16px;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  box-sizing: border-box;\r\n  backdrop-filter: blur(12px);\r\n  border-radius: 72px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding: 40px;\r\n  }\r\n`\r\n\r\nconst BgWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst BottomLeftImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: -64px;\r\n  max-width: 192px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    max-width: 100%;\r\n  }\r\n`\r\n\r\nconst TopRightImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: -64px;\r\n\r\n  max-width: 192px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    max-width: 100%;\r\n  }\r\n`\r\n\r\nconst PredictionCardData: IconCardData = {\r\n  icon: <PredictionsIcon width=\"36px\" color=\"inverseContrast\" />,\r\n  background: 'linear-gradient(180deg, #ffb237 0%, #ffcd51 51.17%, #ffe76a 100%);',\r\n  borderColor: '#ffb237',\r\n  rotation: '-2.36deg',\r\n}\r\n\r\nconst LotteryCardData: IconCardData = {\r\n  icon: <TicketFillIcon color=\"white\" width=\"36px\" />,\r\n  background: ' linear-gradient(180deg, #7645D9 0%, #5121B1 100%);',\r\n  borderColor: '#3C1786',\r\n  rotation: '1.43deg',\r\n}\r\n\r\nconst bottomLeftImage = {\r\n  path: '/images/home/prediction-cards/',\r\n  attributes: [\r\n    { src: 'bottom-left', alt: 'CAKE card' },\r\n    { src: 'green', alt: 'Green CAKE card with up arrow' },\r\n    { src: 'red', alt: 'Red Cake card with down arrow' },\r\n    { src: 'top-right', alt: 'CAKE card' },\r\n  ],\r\n}\r\n\r\nconst topRightImage = {\r\n  path: '/images/home/lottery-balls/',\r\n  attributes: [\r\n    { src: '2', alt: 'Lottery ball number 2' },\r\n    { src: '4', alt: 'Lottery ball number 4' },\r\n    { src: '6', alt: 'Lottery ball number 6' },\r\n    { src: '7', alt: 'Lottery ball number 7' },\r\n    { src: '9', alt: 'Lottery ball number 9' },\r\n  ],\r\n}\r\n\r\nconst WinSection = () => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <BottomLeftImgWrapper>\r\n          <CompositeImage {...bottomLeftImage} />\r\n        </BottomLeftImgWrapper>\r\n        <TopRightImgWrapper>\r\n          <CompositeImage {...topRightImage} />\r\n        </TopRightImgWrapper>\r\n      </BgWrapper>\r\n      <TransparentFrame isDark={theme.isDark}>\r\n        <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n          <PurpleWordHeading textAlign=\"center\" text={t('Win millions in prizes')} />\r\n          <Text color=\"textSubtle\">{t('Provably fair, on-chain games.')}</Text>\r\n          <Text mb=\"40px\" color=\"textSubtle\">\r\n            {t('Win big with RetroSwap.')}\r\n          </Text>\r\n          <Flex m=\"0 auto\" flexDirection={['column', null, null, 'row']} maxWidth=\"600px\">\r\n            {/* <Flex\r\n              flex=\"1\"\r\n              maxWidth={['275px', null, null, '100%']}\r\n              mr={[null, null, null, '24px']}\r\n              mb={['32px', null, null, '0']}\r\n            >\r\n              <IconCard {...PredictionCardData}>\r\n                <PredictionCardContent />\r\n              </IconCard>\r\n            </Flex> */}\r\n            <Flex flex=\"1\" maxWidth={['275px', null, null, '100%']}>\r\n              <IconCard {...LotteryCardData}>\r\n                <LotteryCardContent />\r\n              </IconCard>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n      </TransparentFrame>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WinSection\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nconst SunburstSvg: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1956 1956\" {...props}>\r\n      <g filter=\"url(#filter0_f)\">\r\n        <path\r\n          d=\"M978 20L987.526 796.229L1078.14 25.248L1006.47 798.221L1177.18 40.9346L1025.11 802.182L1274.04 66.8879L1043.23 808.07L1367.65 102.823L1060.64 815.819L1457 148.348L1077.14 825.345L1541.1 202.962L1092.55 836.544L1619.03 266.067L1106.71 849.292L1689.93 336.973L1119.46 863.451L1753.04 414.902L1130.65 878.865L1807.65 499L1140.18 895.365L1853.18 588.346L1147.93 912.77L1889.11 681.962L1153.82 930.89L1915.07 778.821L1157.78 949.526L1930.75 877.862L1159.77 968.474L1936 978L1159.77 987.526L1930.75 1078.14L1157.78 1006.47L1915.07 1177.18L1153.82 1025.11L1889.11 1274.04L1147.93 1043.23L1853.18 1367.65L1140.18 1060.64L1807.65 1457L1130.65 1077.14L1753.04 1541.1L1119.46 1092.55L1689.93 1619.03L1106.71 1106.71L1619.03 1689.93L1092.55 1119.46L1541.1 1753.04L1077.14 1130.65L1457 1807.65L1060.64 1140.18L1367.65 1853.18L1043.23 1147.93L1274.04 1889.11L1025.11 1153.82L1177.18 1915.07L1006.47 1157.78L1078.14 1930.75L987.526 1159.77L978 1936L968.474 1159.77L877.862 1930.75L949.526 1157.78L778.821 1915.07L930.89 1153.82L681.962 1889.11L912.77 1147.93L588.346 1853.18L895.365 1140.18L499 1807.65L878.865 1130.65L414.902 1753.04L863.451 1119.46L336.973 1689.93L849.292 1106.71L266.067 1619.03L836.544 1092.55L202.962 1541.1L825.345 1077.14L148.348 1457L815.819 1060.64L102.823 1367.65L808.07 1043.23L66.8879 1274.04L802.182 1025.11L40.9346 1177.18L798.221 1006.47L25.248 1078.14L796.229 987.526L20 978L796.229 968.474L25.248 877.862L798.221 949.526L40.9346 778.821L802.182 930.89L66.8879 681.962L808.07 912.77L102.823 588.346L815.819 895.365L148.348 499L825.345 878.865L202.962 414.902L836.544 863.451L266.067 336.973L849.292 849.292L336.973 266.067L863.451 836.544L414.902 202.962L878.865 825.345L499 148.348L895.365 815.819L588.346 102.823L912.77 808.07L681.962 66.8879L930.89 802.182L778.821 40.9346L949.526 798.221L877.862 25.248L968.474 796.229L978 20Z\"\r\n          fill=\"url(#paint0_radial)\"\r\n          fillOpacity=\"0.1\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <filter\r\n          id=\"filter0_f\"\r\n          x=\"0\"\r\n          y=\"0\"\r\n          width=\"1956\"\r\n          height=\"1956\"\r\n          filterUnits=\"userSpaceOnUse\"\r\n          colorInterpolationFilters=\"sRGB\"\r\n        >\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"10\" result=\"effect1_foregroundBlur\" />\r\n        </filter>\r\n        <radialGradient\r\n          id=\"paint0_radial\"\r\n          cx=\"0\"\r\n          cy=\"0\"\r\n          r=\"1\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n          gradientTransform=\"translate(978 978) rotate(90) scale(958)\"\r\n        >\r\n          <stop offset=\"0.114547\" stopColor=\"white\" stopOpacity=\"0\" />\r\n          <stop offset=\"0.374975\" stopColor=\"white\" />\r\n          <stop offset=\"1\" stopColor=\"white\" stopOpacity=\"0\" />\r\n        </radialGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport default SunburstSvg\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport Container from 'components/Layout/Container'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport SunburstSvg from './SunburstSvg'\r\nimport CompositeImage from './CompositeImage'\r\n\r\nconst BgWrapper = styled.div`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst StyledSunburst = styled(SunburstSvg)`\r\n  height: 350%;\r\n  width: 350%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    height: 400%;\r\n    width: 400%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled(Flex)`\r\n  z-index: 1;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`\r\n\r\nconst FloatingPancakesWrapper = styled(Container)`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  visibility: hidden;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    visibility: visible;\r\n  }\r\n`\r\n\r\nconst TopLeftImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n`\r\n\r\nconst BottomRightImgWrapper = styled(Flex)`\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n`\r\n\r\nconst topLeftImage = {\r\n  path: '/images/home/flying-pancakes/',\r\n  attributes: [\r\n    { src: '1-bottom', alt: 'Pancake flying on the bottom' },\r\n    { src: '1-left', alt: 'Pancake flying on the left' },\r\n    { src: '1-top', alt: 'Pancake flying on the top' },\r\n  ],\r\n}\r\n\r\nconst bottomRightImage = {\r\n  path: '/images/home/flying-pancakes/',\r\n  attributes: [\r\n    { src: '2-bottom', alt: 'Pancake flying on the bottom' },\r\n    { src: '2-top', alt: 'Pancake flying on the top' },\r\n    { src: '2-right', alt: 'Pancake flying on the right' },\r\n  ],\r\n}\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\" height=\"100%\">\r\n          <StyledSunburst />\r\n        </Flex>\r\n      </BgWrapper>\r\n      <FloatingPancakesWrapper>\r\n        {/* <TopLeftImgWrapper>\r\n          <CompositeImage {...topLeftImage} maxHeight=\"256px\" />\r\n        </TopLeftImgWrapper>\r\n        <BottomRightImgWrapper>\r\n          <CompositeImage {...bottomRightImage} maxHeight=\"256px\" />\r\n        </BottomRightImgWrapper> */}\r\n      </FloatingPancakesWrapper>\r\n      <Wrapper>\r\n        <Heading mb=\"24px\" scale=\"xl\" color=\"white\">\r\n          {t('Start in seconds.')}\r\n        </Heading>\r\n        <Text textAlign=\"center\" color=\"white\">\r\n          {t('Connect your crypto wallet to start using the app in seconds.')}\r\n        </Text>\r\n        <Text mb=\"24px\" bold color=\"white\">\r\n          {t('No registration needed.')}\r\n        </Text>\r\n\r\n        <Link external href=\"https://retroswap.com/docs/whitepaper.pdf\">\r\n          {t('Learn how to start')}\r\n        </Link>\r\n        {!account && <ConnectWalletButton mt=\"24px\" />}\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd, useTotalValue, useFarms } from 'state/farms/hooks'\r\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\r\n  flex-direction: column;\r\n  ${({ noMobileBorder, theme }) =>\r\n    noMobileBorder\r\n      ? `${theme.mediaQueries.md} {\r\n           padding: 0 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         padding: 0 8px;\r\n         ${theme.mediaQueries.sm} {\r\n           padding: 0 16px;\r\n         }\r\n       `}\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px 8px;\r\n  margin-top: 24px;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n`\r\n\r\nconst emissionsPerBlock = 0.2\r\n\r\nconst CakeDataRow = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()), 18)\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply, 18) - burnedBalance : 0\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const mcap = cakePriceBusd.times(cakeSupply)\r\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\r\n  const farms = useFarms()\r\n  const rewardPerBlock = farms && farms.data ? farms.data[0].retroPerBlock : 0\r\n\r\n  return (\r\n    <Grid>\r\n      <Flex flexDirection=\"column\">\r\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\r\n        {cakeSupply ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </Flex>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\r\n        {mcap?.gt(0) && mcapString ? (\r\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('RETRO Price')}</Text>\r\n        {mcap?.gt(0) && mcapString ? (\r\n          <Heading scale=\"lg\">{`$ ${cakePriceBusd.toFixed(3)}`}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      {/* <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('NN / Block')}</Text>\r\n        {rewardPerBlock? (\r\n          <Heading scale=\"lg\">{`${rewardPerBlock}`}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn> */}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CakeDataRow\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\r\n  const [earningsSum, setEarningsSum] = useState<number>(null)\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRetro',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\r\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\r\n        const earningNumber = new BigNumber(earning.balance)\r\n        if (earningNumber.eq(0)) {\r\n          return accum\r\n        }\r\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n      }, 0)\r\n\r\n      setFarmsWithStakedBalance(farmsWithBalances)\r\n      setEarningsSum(totalEarned)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return { farmsWithStakedBalance, earningsSum }\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Flex, Skeleton, Text, Link, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport Balance from 'components/Balance'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { getEarningsText } from './EarningsText'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  height: fit-content;\r\n`\r\n\r\nconst HarvestCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\r\n\r\n  const masterChefContract = useMasterchef()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\r\n  const numTotalToCollect = farmsWithStakedBalance.length\r\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\r\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\r\n\r\n  const earningsText = getEarningsText(numFarmsToCollect, hasCakePoolToCollect, earningsBusd, t)\r\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of farmsWithStakedBalance) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n        )\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardBody>\r\n        <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Flex flexDirection=\"column\" alignItems={['center', null, null, 'flex-start']}>\r\n            {preText && (\r\n              <Text mb=\"4px\" color=\"textSubtle\">\r\n                {preText}\r\n              </Text>\r\n            )}\r\n            {!earningsBusd.isNaN() ? (\r\n              <Balance\r\n                decimals={earningsBusd.gt(0) ? 2 : 0}\r\n                fontSize=\"24px\"\r\n                bold\r\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\r\n                lineHeight=\"1.1\"\r\n                value={earningsBusd.toNumber()}\r\n              />\r\n            ) : (\r\n              <Skeleton width={96} height={24} my=\"2px\" />\r\n            )}\r\n            <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\r\n              {toCollectText}\r\n            </Text>\r\n          </Flex>\r\n          {numTotalToCollect <= 0 ? (\r\n            <Link href=\"/farms\">\r\n              <Button width={['100%', null, null, 'auto']} variant=\"secondary\">\r\n                <Text color=\"primary\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <ArrowForwardIcon ml=\"4px\" color=\"primary\" />\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              width={['100%', null, null, 'auto']}\r\n              id=\"harvest-all\"\r\n              isLoading={pendingTx}\r\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n              disabled={pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              <Text color=\"invertedContrast\" bold>\r\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\r\n              </Text>\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default HarvestCard\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const getEarningsText = (\r\n  numFarmsToCollect: number,\r\n  hasCakePoolToCollect: boolean,\r\n  earningsBusd: BigNumber,\r\n  t: ContextApi['t'],\r\n): string => {\r\n  const data = {\r\n    earningsBusd: earningsBusd.toString(),\r\n    count: numFarmsToCollect,\r\n  }\r\n\r\n  let earningsText = t('%earningsBusd% to collect', data)\r\n\r\n  if (numFarmsToCollect > 0 && hasCakePoolToCollect) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms and CAKE pool', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm and CAKE pool', data)\r\n    }\r\n  } else if (numFarmsToCollect > 0) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm', data)\r\n    }\r\n  } else if (hasCakePoolToCollect) {\r\n    earningsText = t('%earningsBusd% to collect from CAKE pool', data)\r\n  }\r\n\r\n  return earningsText\r\n}\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","/**\r\n * Truncates a wallet's address\r\n */\r\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateWalletAddress\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon, Flex, Heading, Skeleton, Text, Box } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ProfileAvatar from 'views/Profile/components/ProfileAvatar'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\r\n\r\nconst Desktop = styled(Flex)`\r\n  align-items: center;\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Mobile = styled(Flex)`\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Sticker = styled(Flex)`\r\n  height: 92px;\r\n  width: 92px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 3px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: ${({ theme }) => theme.radii.circle};\r\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\r\n`\r\n\r\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst UserDetail = () => {\r\n  const { profile, isLoading } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const truncatedAddress = truncateWalletAddress(account)\r\n  const getDesktopHeading = () => {\r\n    if (profile) {\r\n      return <Heading scale=\"xl\">{t('Hi, %userName%!', { userName: profile.username })}</Heading>\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={200} height={40} my=\"4px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  const getMobileHeading = () => {\r\n    if (profile) {\r\n      return (\r\n        <Heading mb=\"18px\" textAlign=\"center\">\r\n          {t('Hi, %userName%!', { userName: profile.username })}\r\n        </Heading>\r\n      )\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={120} height={20} mt=\"2px\" mb=\"18px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Desktop>\r\n        <Box mr=\"24px\">\r\n          <Sticker>{profile ? <ProfileAvatar profile={profile} /> : <StyledNoProfileAvatarIcon />}</Sticker>\r\n        </Box>\r\n        <Flex flexDirection=\"column\">\r\n          { !account ? (\r\n            <Skeleton width={160} height={16} my=\"4px\" />\r\n          ) : (\r\n            <Text fontSize=\"16px\"> {t('Connected with %address%', { address: truncatedAddress })}</Text>\r\n          )}\r\n        </Flex>\r\n      </Desktop>\r\n      <Mobile>{getMobileHeading()}</Mobile>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserDetail\r\n","import React from 'react'\r\nimport { Box, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport HarvestCard from './HarvestCard'\r\nimport UserDetail from './UserDetail'\r\n\r\nconst StyledCard = styled(Box)`\r\n  border-top-left-radius: 0px;\r\n  border-top-right-radius: 0px;\r\n  border-bottom: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-left: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-right: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-radius: ${({ theme }) => `0 0 ${theme.radii.card} ${theme.radii.card}`};\r\n  background: ${({ theme }) =>\r\n    theme.isDark\r\n      ? 'linear-gradient(360deg, rgba(49, 61, 92, 0.9) 0%, rgba(61, 42, 84, 0.9) 100%)'\r\n      : 'linear-gradient(180deg, rgba(202, 194, 236, 0.9) 0%,  rgba(204, 220, 239, 0.9) 51.04%, rgba(206, 236, 243, 0.9) 100%)'};\r\n`\r\n\r\nconst UserBanner = () => {\r\n  return (\r\n    <StyledCard>\r\n      <Box p={['16px', null, null, '24px']}>\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" mr={[null, null, null, '32px']}>\r\n            <UserDetail />\r\n          </Flex>\r\n          <Flex flex=\"1\" width={['100%', null, 'auto']}>\r\n            <HarvestCard />\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default UserBanner\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Cookies from 'universal-cookie';\r\nimport { useQueryParam, StringParam } from 'use-query-params';\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport Hero from './components/Hero'\r\nimport { isAddress } from '../../utils/web3'\r\nimport rot13 from '../../utils/encode'\r\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\r\nimport MetricsSection from './components/MetricsSection'\r\nimport SalesSection from './components/SalesSection'\r\nimport WinSection from './components/WinSection'\r\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\r\nimport Footer from './components/Footer'\r\nimport CakeDataRow from './components/CakeDataRow'\r\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\r\nimport UserBanner from './components/UserBanner'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  background-image: url('images/bg.jpg');\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n  const cookies = new Cookies();\r\n  const [ref, setNum] = useQueryParam('ref', StringParam);\r\n\r\n  if(ref) {\r\n    if(isAddress(rot13(ref))) {\r\n      cookies.set(\"ref\", ref)\r\n    }\r\n  }\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      <StyledHeroSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'radial-gradient(103.12% 50% at 50% 50%, #21193A 0%, #191326 100%)'\r\n            : 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        {account && (\r\n          <UserBannerWrapper>\r\n            <UserBanner />\r\n          </UserBannerWrapper>\r\n        )}\r\n        <Hero />\r\n      </StyledHeroSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.backgroundAlt}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <SalesSection {...cakeSectionData} />\r\n        <CakeDataRow />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #09070C 22%, #201335 100%)'\r\n            : 'linear-gradient(180deg, #FFFFFF 22%, #D7CAEC 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <MetricsSection />\r\n      </PageSection>\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper top fill={theme.isDark ? '#201335' : '#D8CBED'}>\r\n            <WedgeTopLeft />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...swapSectionData} />\r\n      </PageSection> */}\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.gradients.cardHeader}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper width=\"150%\" top fill={theme.colors.background}>\r\n            <WedgeTopRight />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...earnSectionData} />\r\n        <FarmsPoolsRow />\r\n      </PageSection> */}\r\n\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #0B4576 0%, #091115 100%)'\r\n            : 'linear-gradient(180deg, #6FB6F1 0%, #EAF2F6 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <WinSection />\r\n      </PageSection>\r\n   \r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background=\"linear-gradient(180deg, #7645D9 0%, #5121B1 100%)\"\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <Footer />\r\n      </PageSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={previousValue.current}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","function rot13(s) {\r\n    return s.replace(/[A-Z]/gi, c =>\r\n      \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\"[\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".indexOf(c) ] )\r\n  }\r\n\r\nexport default rot13","import { ethers, Contract, Overrides } from 'ethers'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[],\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\r\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = rawGasEstimation\r\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\r\n    .div(ethers.BigNumber.from(10000))\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[] = [],\r\n  overrides: Overrides = {},\r\n  gasMarginPer10000 = 1000,\r\n): Promise<ethers.providers.TransactionResponse> => {\r\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n    ...overrides,\r\n  })\r\n  return tx\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\nimport { ethers } from 'ethers'\r\nimport Cookies from 'universal-cookie';\r\nimport rot13 from 'utils/encode';\r\nimport { isAddress } from 'utils';\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount, decimals?) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = decimals ? new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString() : new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  // if (pid === 0) {\r\n  //   const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  const tx = await masterChefContract.deposit(pid, value, ref, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount, decimals?) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = decimals ? new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString() : new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  // if (pid === 0) {\r\n  //   const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  let ref\r\n  if(cookies.get('ref')) {\r\n    if(isAddress( rot13(cookies.get('ref')) )) {\r\n      ref = rot13(cookies.get('ref'))\r\n    }\r\n  } else {\r\n    ref = \"0x0000000000000000000000000000000000000000\"\r\n  }\r\n  const gasPrice = getGasPrice()\r\n  // if (pid === 0) {\r\n  //   const tx = await await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n  //   const receipt = await tx.wait()\r\n  //   return receipt.status\r\n  // }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', ref, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL || 'https://bsc-dataseed1.ninicoin.io', { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\nconst isAddress = (address: string) => {\r\n  return Web3.utils.isAddress(address)\r\n}\r\n\r\nexport { getWeb3, getContract, httpProvider, isAddress }\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getconcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getconcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n"],"sourceRoot":""}